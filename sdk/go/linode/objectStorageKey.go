// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Linode Object Storage Key resource. This can be used to create, modify, and delete Linodes Object Storage Keys.
// 
// ## Attributes
// 
// This resource exports the following attributes:
// 
// * `accessKey` - This keypair's access key. This is not secret.
// 
// * `secretKey` - This keypair's secret key.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-linode/blob/master/website/docs/r/object_storage_key.html.markdown.
type ObjectStorageKey struct {
	s *pulumi.ResourceState
}

// NewObjectStorageKey registers a new resource with the given unique name, arguments, and options.
func NewObjectStorageKey(ctx *pulumi.Context,
	name string, args *ObjectStorageKeyArgs, opts ...pulumi.ResourceOpt) (*ObjectStorageKey, error) {
	if args == nil || args.Label == nil {
		return nil, errors.New("missing required argument 'Label'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["label"] = nil
	} else {
		inputs["label"] = args.Label
	}
	inputs["accessKey"] = nil
	inputs["secretKey"] = nil
	s, err := ctx.RegisterResource("linode:index/objectStorageKey:ObjectStorageKey", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ObjectStorageKey{s: s}, nil
}

// GetObjectStorageKey gets an existing ObjectStorageKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectStorageKey(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ObjectStorageKeyState, opts ...pulumi.ResourceOpt) (*ObjectStorageKey, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accessKey"] = state.AccessKey
		inputs["label"] = state.Label
		inputs["secretKey"] = state.SecretKey
	}
	s, err := ctx.ReadResource("linode:index/objectStorageKey:ObjectStorageKey", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ObjectStorageKey{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ObjectStorageKey) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ObjectStorageKey) ID() pulumi.IDOutput {
	return r.s.ID()
}

// This keypair's access key. This is not secret.
func (r *ObjectStorageKey) AccessKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["accessKey"])
}

// The label given to this key. For display purposes only.
func (r *ObjectStorageKey) Label() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["label"])
}

// This keypair's secret key.
func (r *ObjectStorageKey) SecretKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["secretKey"])
}

// Input properties used for looking up and filtering ObjectStorageKey resources.
type ObjectStorageKeyState struct {
	// This keypair's access key. This is not secret.
	AccessKey interface{}
	// The label given to this key. For display purposes only.
	Label interface{}
	// This keypair's secret key.
	SecretKey interface{}
}

// The set of arguments for constructing a ObjectStorageKey resource.
type ObjectStorageKeyArgs struct {
	// The label given to this key. For display purposes only.
	Label interface{}
}
